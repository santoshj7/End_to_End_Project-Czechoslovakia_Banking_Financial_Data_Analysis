
/* DATA TRANSFORMATIONS */

-- Client wants to update the Date information in Transaction table as follows.
-- In the Transactions table whosoever transaction count is highest, sort it in descending order and change the year from 2024,2023,2022... as follows.
/* CONVERT 2021 TXN_YEAR TO 2024
   CONVERT 2020 TXN_YEAR TO 2023
   CONVERT 2019 TXN_YEAR TO 2022
   CONVERT 2018 TXN_YEAR TO 2021
   CONVERT 2017 TXN_YEAR TO 2019
   CONVERT 2016 TXN_YEAR TO 2020 */

SELECT YEAR(DATE) AS TXN_YEAR, COUNT(*) AS TOT_TXNS
FROM TRANSACTIONS
GROUP BY 1
ORDER BY 2 DESC;

-- Converting 2021 TXN_YEAR to 2024
UPDATE TRANSACTIONS
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2021;

-- Converting 2020 TXN_YEAR to 2023
UPDATE TRANSACTIONS
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2020;

-- Converting 2019 TXN_YEAR to 2022
UPDATE TRANSACTIONS
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2019;

-- Converting 2018 TXN_YEAR to 2021
UPDATE TRANSACTIONS
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2018;

-- Converting 2017 TXN_YEAR to 2019
UPDATE TRANSACTIONS
SET DATE = DATEADD(YEAR, 2, DATE)
WHERE YEAR(DATE) = 2017;

-- Converting 2016 TXN_YEAR to 2020
UPDATE TRANSACTIONS
SET DATE = DATEADD(YEAR, 4, DATE)
WHERE YEAR(DATE) = 2016;

SELECT YEAR(DATE) AS TXN_YEAR, COUNT(*) AS TOT_TXNS
FROM TRANSACTIONS
GROUP BY 1
ORDER BY 2 DESC;

/* Result before and after updating the date
2021 - 314532  -->  2024 - 314532
2020 - 284409  -->  2023 - 284409
2019 - 196779  -->  2022 - 196779
2018 - 133022  -->  2021 - 133022
2017 - 91628   -->  2019 - 91628
2016 - 28205   -->  2020 - 28205 */

-- Client wants to update the NULL values for the attribute 'BANK' in the TRANSACTION table for the particular transaction year as follows.
-- In the Transactions table whosoever transaction count is highest (in the context of NULL values in the attribute BANK), sort it in descending order and change the NULL values in attribute 'BANK' for the particular transaction year in the respective order - 'Sky Bank', 'DBS Bank', 'Northern Bank', 'Southern Bank', 'ADB Bank'.

SELECT YEAR(DATE) AS TXN_YEAR, COUNT(*) AS TOT_TXNS
FROM TRANSACTIONS
WHERE BANK IS NULL
GROUP BY 1
ORDER BY 2 DESC;

-- From the result, as per requirement we need to change the null values as follows.
/* 2024 (226491) --> Sky Bank
   2023 (210877) --> DBS Bank
   2022 (0) --> No NULL values
   2021 (99074) --> Northern Bank
   2019 (68763) --> Southern Bank
   2020 (22512) --> ADB Bank */

UPDATE TRANSACTIONS
SET BANK = 'Sky Bank'
WHERE BANK IS NULL AND YEAR(DATE) = 2024;

UPDATE TRANSACTIONS
SET BANK = 'DBS Bank'
WHERE BANK IS NULL AND YEAR(DATE) = 2023;

UPDATE TRANSACTIONS
SET BANK = 'Northern Bank'
WHERE BANK IS NULL AND YEAR(DATE) = 2021;

UPDATE TRANSACTIONS
SET BANK = 'Southern Bank'
WHERE BANK IS NULL AND YEAR(DATE) = 2019;

UPDATE TRANSACTIONS
SET BANK = 'ADB Bank'
WHERE BANK IS NULL AND YEAR(DATE) = 2020;

SELECT * FROM TRANSACTIONS;

-- Client wants to update the Issued Date information in the Card table as follows.
-- In the CARD table whosoever issued card count is highest, sort it in descending order and change the year from 2024,2023,2022... as follows.
/* CONVERT 2021 TXN_YEAR TO 2024
   CONVERT 2020 TXN_YEAR TO 2023
   CONVERT 2019 TXN_YEAR TO 2022
   CONVERT 2018 TXN_YEAR TO 2021
   CONVERT 2017 TXN_YEAR TO 2019
   CONVERT 2016 TXN_YEAR TO 2020 */
   
SELECT * FROM CARD;
SELECT DISTINCT YEAR(ISSUED) FROM CARD;

SELECT YEAR(ISSUED), COUNT(*) AS TOT_CARD_ISSUED
FROM CARD
GROUP BY 1
ORDER BY 2 DESC;

UPDATE CARD
SET ISSUED = DATEADD(YEAR, 3, ISSUED)
WHERE YEAR(ISSUED) = 2021;

UPDATE CARD
SET ISSUED = DATEADD(YEAR, 3, ISSUED)
WHERE YEAR(ISSUED) = 2020;

UPDATE CARD
SET ISSUED = DATEADD(YEAR, 3, ISSUED)
WHERE YEAR(ISSUED) = 2019;

UPDATE CARD
SET ISSUED = DATEADD(YEAR, 3, ISSUED)
WHERE YEAR(ISSUED) = 2018;

UPDATE CARD
SET ISSUED = DATEADD(YEAR, 2, ISSUED)
WHERE YEAR(ISSUED) = 2017;

UPDATE CARD
SET ISSUED = DATEADD(YEAR, 4, ISSUED)
WHERE YEAR(ISSUED) = 2016;

SELECT YEAR(ISSUED), COUNT(*) AS TOT_CARD_ISSUED
FROM CARD
GROUP BY 1
ORDER BY 2 DESC;

/* Result before and after updating the issued date
2021 - 449  -->  2024 - 449
2020 - 242  -->  2023 - 242
2019 - 116  -->  2022 - 116
2018 - 63   -->  2021 - 63
2017 - 21   -->  2019 - 21
2016 - 1    -->  2020 - 1 */

-- Client wants to update the DATE attribute in the ACCOUNT table by adding two years to the current date.
SELECT * FROM ACCOUNT;
SELECT YEAR(DATE), COUNT(*) FROM ACCOUNT
GROUP BY 1
ORDER BY 1 DESC;

UPDATE ACCOUNT
SET DATE = DATEADD(YEAR, 2, DATE)
WHERE YEAR(DATE) = 2020;

UPDATE ACCOUNT
SET DATE = DATEADD(YEAR, 2, DATE)
WHERE YEAR(DATE) = 2019;

UPDATE ACCOUNT
SET DATE = DATEADD(YEAR, 2, DATE)
WHERE YEAR(DATE) = 2018;

UPDATE ACCOUNT
SET DATE = DATEADD(YEAR, 2, DATE)
WHERE YEAR(DATE) = 2017;

UPDATE ACCOUNT
SET DATE = DATEADD(YEAR, 2, DATE)
WHERE YEAR(DATE) = 2016;

SELECT YEAR(DATE), COUNT(*) FROM ACCOUNT
GROUP BY 1
ORDER BY 1 DESC; 

/* Result before and after updating the date
2020 - 898   -->  2022 - 898
2019 - 1363  -->  2021 - 1363
2018 - 661   -->  2020 - 661
2017 - 439   -->  2019 - 439
2016 - 1139  -->  2018 - 1139 */

-- Client wants to update the DATE attribute in the LOAN table as follows.
/* CONVERT 2021 YEAR TO 2024
   CONVERT 2020 YEAR TO 2023
   CONVERT 2019 YEAR TO 2022
   CONVERT 2018 YEAR TO 2021
   CONVERT 2017 YEAR TO 2019
   CONVERT 2016 YEAR TO 2020 */
   
SELECT * FROM LOAN;

SELECT YEAR(DATE), COUNT(*) FROM LOAN
GROUP BY 1
ORDER BY 1 DESC;

SELECT * FROM LOAN
WHERE YEAR(DATE) = 2019;

UPDATE LOAN
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2021;

UPDATE LOAN
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2020;

UPDATE LOAN
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2019;

UPDATE LOAN
SET DATE = DATEADD(YEAR, 3, DATE)
WHERE YEAR(DATE) = 2018;

UPDATE LOAN
SET DATE = DATEADD(YEAR, 2, DATE)
WHERE YEAR(DATE) = 2017;

UPDATE LOAN
SET DATE = DATEADD(YEAR, 4, DATE)
WHERE YEAR(DATE) = 2016;

SELECT YEAR(DATE), COUNT(*) FROM LOAN
GROUP BY 1
ORDER BY 1 DESC;

/* Result before and after updating the date
2021 - 158  -->  2024 - 158
2020 - 196  -->  2023 - 196
2019 - 117  -->  2022 - 117
2018 - 90   -->  2021 - 90
2017 - 101  -->  2019 - 101
2016 - 20   -->  2020 - 20 */

-- Client wants to add the AGE column to the CLIENT table by subtracting the birth year and last transaction year. 

SELECT * FROM CLIENT;
SELECT MAX(DATE) FROM TRANSACTIONS;

ALTER TABLE CLIENT
ADD COLUMN AGE INT;

UPDATE CLIENT
SET AGE = DATEDIFF(YEAR, BIRTH_DATE, '2024-12-19');

